!function(){const t=document.currentScript,o=/^localhost$|^127\.([0-9]+\.){0,2}[0-9]+$|^\[::1?\]$/.test(window.location.hostname),n=window.location.port&&["5001","5002","5003"].includes(window.location.port),e="file:"===window.location.protocol,i=window!==window.parent,r="true"===t?.getAttribute("data-debug");if(o&&!n&&!r||e||i)return void console.log("Visitor Counter: Tracking disabled on localhost (not a dev server), file protocol, or inside iframe");function c(...t){r&&console.log("[Visitor Counter]",...t)}let a=window.location.pathname,s=null;const d=document.createElement("script");function w(){if(!s)return;const t={path:window.location.pathname,referrer:document.referrer||"direct",title:document.title,url:window.location.href};c("Tracking page view:",t),s.emit("page-view",t),a=window.location.pathname}function l(){window.location.pathname!==a&&(c("URL changed from",a,"to",window.location.pathname),s&&s.emit("page-exit",{path:a}),w())}d.src="https://cdn.socket.io/4.6.0/socket.io.min.js",d.onload=function(){const o=(()=>{const o=t?.src;if(o)try{const t=new URL(o);return c("Using script source origin:",t.origin),t.origin}catch(t){c("Failed to parse script URL:",t)}if(n)return c("Using dev server origin:",window.location.origin),window.location.origin;const e=t?.getAttribute("data-tracking-domain");return e?(c("Using tracking domain:",e),e.startsWith("http")?e:`https://${e}`):(c("Using current origin (self-hosted):",window.location.origin),window.location.origin)})();c("Connecting to server:",o),s=io(o,{withCredentials:!1,transports:["websocket","polling"],query:{page:window.location.pathname,referrer:document.referrer||"direct",hostname:window.location.hostname,title:document.title}}),s.on("connect",(()=>{c("Connected to visitor counter service"),w(),function(){if(window.history&&window.history.pushState){const t=window.history.pushState,o=window.history.replaceState;window.history.pushState=function(o,n,e){t.apply(this,[o,n,e]),l()},window.history.replaceState=function(t,n,e){o.apply(this,[t,n,e]),l()},window.addEventListener("popstate",l)}document.addEventListener("click",(t=>{let o=t.target;for(;o&&"A"!==o.tagName;)o=o.parentElement}))}()})),s.on("connect_error",(t=>{console.warn("Visitor counter connection error:",t.message)})),window.addEventListener("beforeunload",(()=>{s&&(s.emit("page-exit",{path:a}),s.disconnect())}))},document.head.appendChild(d)}();